select(ring, cap_year) %>%
distinct() %>%
mutate(obs = 1L) %>%
# keep only your 23 seasons 1997–2019
filter(cap_year >= 1997, cap_year <= 2019)
# 3. Build every ring × Aug–Jul season from 1997 to 2019
years <- 1997:2019
all_combos <- expand.grid(
ring     = unique(dat$ring),
cap_year = years
)
full <- all_combos %>%
left_join(dat, by = c("ring","cap_year")) %>%
mutate(obs = replace_na(obs, 0L))
# 4. Pivot into your 0/1 encounter‐history (yr1990 … yr2019)
enc_hist <- full %>%
arrange(ring, cap_year) %>%
pivot_wider(
names_from   = cap_year,
values_from  = obs,
names_prefix = "yr",
values_fill  = 0L
)
# 5. (Optional) Get a matrix or .inp file exactly as before:
ch_matrix <- as.matrix(enc_hist[,-1])
rownames(ch_matrix) <- enc_hist$ring
# if you need the .inp format:
caphist_inp <- enc_hist %>%
mutate(caphist = apply(select(., starts_with("yr")), 1, paste0, collapse = "")) %>%
select(caphist) %>%
mutate(freq = 1)
write.table(
caphist_inp,
"peregrine_data_newyear.inp",
quote     = FALSE,
row.names = FALSE,
col.names = FALSE,
sep       = " "
)
#checking if any encounter histories are just zeros
caphist_inp %>%
mutate(
n1 = str_count(caphist, "1")          # count of 1’s in each string
) %>%
summarise(
all_zero    = sum(n1 == 0),               # histories with no sightings at all
single_cap  = sum(n1 == 1),               # seen exactly once
recaptured  = sum(n1  > 1),               # seen more than once
total_birds = n()                         # total rows
)
#checking if any years have all zeros
# 1. count total sightings in each occasion
year_counts <- colSums(ch_matrix)
# 2. see if any occasion has zero sightings
zero_years <- names(year_counts)[year_counts == 0]
year_counts
zero_years
# file path
path <- "Peregrine ringing data sightings_1989-2024_13042025.xlsx"
# 1. Read & process the “All ringed” sheet (primary captures)
ring_events <- read_excel(path, sheet = "All ringed", skip = 3) %>%
rename(
ring       = `ring number`,
date_event = `date ringed`
) %>%
mutate(
date_event = as.Date(date_event),
# Aug–Jul “capture‐year”
cap_year   = if_else(
month(date_event) >= 8,
year(date_event),
year(date_event) - 1L
),
obs = 1L
) %>%
# keep only seasons 1997–2019
filter(cap_year >= 1997, cap_year <= 2019) %>%
select(ring, cap_year, obs)
# 2. Read & process the “Re-sightings – annual” sheet (recaptures)
sight_events <- read_excel(path, sheet = "Re-sightings - annual", skip = 3) %>%
rename(
ring       = `ring number`,
date_event = `date sighted on territory`
) %>%
mutate(
date_event = as.Date(date_event),
cap_year   = if_else(
month(date_event) >= 8,
year(date_event),
year(date_event) - 1L
),
obs = 1L
) %>%
filter(cap_year >= 1997, cap_year <= 2019) %>%
select(ring, cap_year, obs)
# 3. Combine captures and recaptures
dat_all <- bind_rows(ring_events, sight_events) %>%
distinct()    # one (ring, cap_year) per event
# 4. Build full bird × season grid and fill zeros
years <- 1997:2019
all_combos <- expand.grid(
ring     = unique(dat_all$ring),
cap_year = years
)
full <- all_combos %>%
left_join(dat_all, by = c("ring", "cap_year")) %>%
mutate(obs = replace_na(obs, 0L))
# 5. Pivot to a 0/1 encounter history (yr1997 … yr2019)
enc_hist <- full %>%
arrange(ring, cap_year) %>%
pivot_wider(
names_from   = cap_year,
values_from  = obs,
names_prefix = "yr",
values_fill  = 0L
)
# 6. Optional: extract matrix and write .inp file
ch_matrix <- as.matrix(enc_hist[,-1])
rownames(ch_matrix) <- enc_hist$ring
caphist_inp <- enc_hist %>%
mutate(
caphist = apply(select(., starts_with("yr")), 1, paste0, collapse = "")
) %>%
select(caphist) %>%
mutate(freq = 1)
write.table(
caphist_inp,
"peregrine_merged_.inp",
quote     = FALSE,
row.names = FALSE,
col.names = FALSE,
sep       = " "
)
View(caphist_inp)
write.table(
caphist_inp,
"peregrine_merged_.inp",
quote     = FALSE,
row.names = FALSE,
col.names = FALSE,
sep       = " "
)
getwd()
list.files(getwd())
# 3. Combine captures and recaptures, but only for birds ringed ≥1997
dat_all <- bind_rows(
ring_events,
sight_events %>% filter(ring %in% ring_events$ring)
) %>%
distinct()
# 4. Build full bird × season grid and fill zeros
years <- 1997:2019
all_combos <- expand.grid(
ring     = unique(dat_all$ring),
cap_year = years
)
full <- all_combos %>%
left_join(dat_all, by = c("ring", "cap_year")) %>%
mutate(obs = replace_na(obs, 0L))
# 5. Pivot to a 0/1 encounter history (yr1997 … yr2019)
enc_hist <- full %>%
arrange(ring, cap_year) %>%
pivot_wider(
names_from   = cap_year,
values_from  = obs,
names_prefix = "yr",
values_fill  = 0L
)
# 6. Optional: extract matrix and write .inp file
ch_matrix <- as.matrix(enc_hist[,-1])
rownames(ch_matrix) <- enc_hist$ring
caphist_inp <- enc_hist %>%
mutate(
caphist = apply(select(., starts_with("yr")), 1, paste0, collapse = "")
) %>%
select(caphist) %>%
mutate(freq = 1)
write.table(
caphist_inp,
"peregrine_merged_.inp",
quote     = FALSE,
row.names = FALSE,
col.names = FALSE,
sep       = " "
)
# 1. Find which rows sum to zero
zero_rows <- which(rowSums(ch_matrix) == 0)
# 2. Any all‐zero histories?
any_zero_histories <- length(zero_rows) > 0
any_zero_histories    # TRUE/FALSE
# 3. See which birds they are
if (any_zero_histories) {
rownames(ch_matrix)[zero_rows]
}
#####new year code-----------
#Read the raw data
raw <- read_excel(
"Peregrine ringing data sightings_1989-2024_13042025.xlsx",
sheet = "Re-sightings - annual",
skip  = 3
)
#Compute an "Aug–Jul capture‐year" and flag sightings
dat <- raw %>%
rename(
ring      = `ring number`,
date_seen = `date sighted on territory`
) %>%
mutate(
date_seen = as.Date(date_seen),
cap_year = if_else(
month(date_seen) >= 8, #changed from 9 to 8 because we want aug-july not sept-aug
year(date_seen),
year(date_seen) - 1L
)
) %>%
select(ring, cap_year) %>%
distinct() %>%
mutate(obs = 1L) %>%
# keep only your 23 seasons 1997–2019
filter(cap_year >= 1997, cap_year <= 2019)
#Build every ring × Aug–Jul season from 1997 to 2019
years <- 1997:2019
all_combos <- expand.grid(
ring     = unique(dat$ring),
cap_year = years
)
full <- all_combos %>%
left_join(dat, by = c("ring","cap_year")) %>%
mutate(obs = replace_na(obs, 0L))
#Pivot into your 0/1 encounter‐history (yr1990 … yr2019)
enc_hist <- full %>%
arrange(ring, cap_year) %>%
pivot_wider(
names_from   = cap_year,
values_from  = obs,
names_prefix = "yr",
values_fill  = 0L
)
#(Optional) Get a matrix or .inp file exactly as before:
ch_matrix <- as.matrix(enc_hist[,-1])
rownames(ch_matrix) <- enc_hist$ring
# if need the .inp format:
caphist_inp <- enc_hist %>%
mutate(caphist = apply(select(., starts_with("yr")), 1, paste0, collapse = "")) %>%
select(caphist) %>%
mutate(freq = 1)
write.table(
caphist_inp,
"peregrine_data_newyear.inp",
quote     = FALSE,
row.names = FALSE,
col.names = FALSE,
sep       = " "
)
# build each line with a trailing semicolon
lines <- with(caphist_inp, paste0(caphist, " ", freq, " ;"))
# write out exactly those lines
writeLines(lines, "peregrine_data_newyear.inp")
#checking if any encounter histories are just zeros
caphist_inp %>%
mutate(
n1 = str_count(caphist, "1")          # count of 1’s in each string
) %>%
summarise(
all_zero    = sum(n1 == 0),               # histories with no sightings at all
single_cap  = sum(n1 == 1),               # seen exactly once
recaptured  = sum(n1  > 1),               # seen more than once
total_birds = n()                         # total rows
)
# file path
path <- "Peregrine ringing data sightings_1989-2024_13042025.xlsx"
#Read & process the “All ringed” sheet (primary captures)
ring_events <- read_excel(path, sheet = "All ringed", skip = 3) %>%
rename(
ring       = `ring number`,
date_event = `date ringed`
) %>%
mutate(
date_event = as.Date(date_event),
# Aug–Jul “capture‐year”
cap_year   = if_else(
month(date_event) >= 8,
year(date_event),
year(date_event) - 1L
),
obs = 1L
) %>%
# keep only seasons 1997–2019
filter(cap_year >= 1997, cap_year <= 2019) %>%
select(ring, cap_year, obs)
#Read & process the “Re-sightings – annual” sheet (recaptures)
sight_events <- read_excel(path, sheet = "Re-sightings - annual", skip = 3) %>%
rename(
ring       = `ring number`,
date_event = `date sighted on territory`
) %>%
mutate(
date_event = as.Date(date_event),
cap_year   = if_else(
month(date_event) >= 8,
year(date_event),
year(date_event) - 1L
),
obs = 1L
) %>%
filter(cap_year >= 1997, cap_year <= 2019) %>%
select(ring, cap_year, obs)
#Combine captures and recaptures, but only for birds ringed ≥1997
dat_all <- bind_rows(
ring_events,
sight_events %>% filter(ring %in% ring_events$ring)
) %>%
distinct()
#Build full bird × season grid and fill zeros
years <- 1997:2019
all_combos <- expand.grid(
ring     = unique(dat_all$ring),
cap_year = years
)
full <- all_combos %>%
left_join(dat_all, by = c("ring", "cap_year")) %>%
mutate(obs = replace_na(obs, 0L))
#Pivot to a 0/1 encounter history (yr1997 … yr2019)
enc_hist <- full %>%
arrange(ring, cap_year) %>%
pivot_wider(
names_from   = cap_year,
values_from  = obs,
names_prefix = "yr",
values_fill  = 0L
)
#Optional: extract matrix and write .inp file
ch_matrix <- as.matrix(enc_hist[,-1])
rownames(ch_matrix) <- enc_hist$ring
caphist_inp <- enc_hist %>%
mutate(
caphist = apply(select(., starts_with("yr")), 1, paste0, collapse = "")
) %>%
select(caphist) %>%
mutate(freq = 1)
write.table(
caphist_inp,
"peregrine_merged_.inp",
quote     = FALSE,
row.names = FALSE,
col.names = FALSE,
sep       = " "
)
#Build each line with a trailing semicolon
lines <- with(caphist_inp, paste0(caphist, " ", freq, " ;"))
#Write exactly those lines to your .inp
writeLines(lines, "peregrine_merged_.inp")
#no all zero histories here either so we didn't have to remove any
######age class histories######
path <- "Peregrine ringing data sightings_1989-2024_13042025.xlsx"
ring_events <- read_excel(path, sheet = "All ringed", skip = 3) %>%
rename(
ring       = `ring number`,
date_event = `date ringed`,
age        = `age`              # one-letter codes: n, j, a
) %>%
mutate(
date_event = as.Date(date_event),
cap_year   = if_else(month(date_event) >= 9,
year(date_event),
year(date_event) - 1L),
obs        = 1L
) %>%
filter(cap_year >= 1997, cap_year <= 2019) %>%
select(ring, cap_year, obs, age)
#Process “Re-sightings – annual” sheet -> recaptures
sight_events <- read_excel(path, sheet = "Re-sightings - annual", skip = 3) %>%
rename(
ring       = `ring number`,
date_event = `date sighted on territory`
) %>%
mutate(
date_event = as.Date(date_event),
cap_year   = if_else(month(date_event) >= 9,
year(date_event),
year(date_event) - 1L),
obs        = 1L
) %>%
filter(cap_year >= 1997, cap_year <= 2019,
ring %in% ring_events$ring) %>%
select(ring, cap_year, obs)
#Combine captures & recaptures, remove duplicates
dat_all <- bind_rows(ring_events, sight_events) %>%
distinct(ring, cap_year, obs)
#Expand to full bird × season grid, fill in zeros
years    <- 1997:2019
all_combos <- expand.grid(
ring     = unique(dat_all$ring),
cap_year = years
)
full <- all_combos %>%
left_join(dat_all, by = c("ring","cap_year")) %>%
mutate(obs = replace_na(obs, 0L))
#Pivot to wide 0/1 matrix and re-attach age
enc_hist <- full %>%
arrange(ring, cap_year) %>%
pivot_wider(
names_from   = cap_year,
values_from  = obs,
names_prefix = "yr",
values_fill  = 0L
) %>%
left_join(ring_events %>% distinct(ring, age), by = "ring")
# Build inp with 3 age classes
inp_age3 <- enc_hist %>%
mutate(
caphist   = apply(select(., starts_with("yr")), 1, paste0, collapse = ""),
freq      = 1L,
age_group = case_when(
age == "n" ~ 1L,       # nestling
age == "j" ~ 2L,       # juvenile
age == "a" ~ 3L,       # adult
TRUE        ~ NA_integer_
)
) %>%
select(caphist, freq, age_group)
#Write .inp with trailing semicolons
lines <- with(inp_age3, paste0(caphist, " ", freq, " ", age_group, " ;"))
writeLines(lines, "peregrine_age3class.inp")
#Verify no all-zero histories
ch_matrix       <- as.matrix(enc_hist[,-1])
zero_rows       <- which(rowSums(ch_matrix) == 0)
any_zero        <- length(zero_rows) > 0
if(any_zero){
cat("All-zero histories for rings:\n", rownames(ch_matrix)[zero_rows], "\n")
} else {
cat("No all-zero histories — ready for MARK!\n")
}
ring_events %>%
filter(!(age %in% c("n","j","a"))) %>%
distinct(ring, age)
#no all zero histories here either so we didn't have to remove any
######age class histories######
path <- "Peregrine ringing data sightings_1989-2024_13042025.xlsx"
ring_events <- read_excel(path, sheet = "All ringed", skip = 3) %>%
rename(
ring       = `ring number`,
date_event = `date ringed`,
age        = `age`              # one-letter codes: n, j, a OR juvenile
) %>%
mutate(
date_event = as.Date(date_event),
cap_year   = if_else(month(date_event) >= 9,
year(date_event),
year(date_event) - 1L),
obs        = 1L
) %>%
filter(cap_year >= 1997, cap_year <= 2019) %>%
select(ring, cap_year, obs, age)
#Process “Re-sightings – annual” sheet -> recaptures
sight_events <- read_excel(path, sheet = "Re-sightings - annual", skip = 3) %>%
rename(
ring       = `ring number`,
date_event = `date sighted on territory`
) %>%
mutate(
date_event = as.Date(date_event),
cap_year   = if_else(month(date_event) >= 9,
year(date_event),
year(date_event) - 1L),
obs        = 1L
) %>%
filter(cap_year >= 1997, cap_year <= 2019,
ring %in% ring_events$ring) %>%
select(ring, cap_year, obs)
#Combine captures & recaptures, remove duplicates
dat_all <- bind_rows(ring_events, sight_events) %>%
distinct(ring, cap_year, obs)
#Expand to full bird × season grid, fill in zeros
years    <- 1997:2019
all_combos <- expand.grid(
ring     = unique(dat_all$ring),
cap_year = years
)
full <- all_combos %>%
left_join(dat_all, by = c("ring","cap_year")) %>%
mutate(obs = replace_na(obs, 0L))
#Pivot to wide 0/1 matrix and re-attach age
enc_hist <- full %>%
arrange(ring, cap_year) %>%
pivot_wider(
names_from   = cap_year,
values_from  = obs,
names_prefix = "yr",
values_fill  = 0L
) %>%
left_join(ring_events %>% distinct(ring, age), by = "ring")
# Build inp with 3 age classes
inp_age3 <- enc_hist %>%
mutate(
caphist   = apply(select(., starts_with("yr")), 1, paste0, collapse = ""),
freq      = 1L,
age_group = case_when(
age == "n" ~ 1L,       # nestling
age %in% c("j", "juvenile") ~ 2L, # juvenile
age == "a" ~ 3L,       # adult
TRUE        ~ NA_integer_
)
) %>%
select(caphist, freq, age_group)
#Write .inp with trailing semicolons
lines <- with(inp_age3, paste0(caphist, " ", freq, " ", age_group, " ;"))
writeLines(lines, "peregrine_age3class.inp")
#one row with NA because it was coded as juvenile instead of just a "J"
ring_events %>%
filter(!(age %in% c("n","j","a"))) %>%
distinct(ring, age)
